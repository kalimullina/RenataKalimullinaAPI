{
	"info": {
		"_postman_id": "0d65fa95-42cc-42ec-8e51-7db830d0e2a2",
		"name": "RenataKalimullinaTrello",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "create board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"board_id\", pm.response.json().id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/1/boards?key={{myKey}}&token={{myToken}}&name={{boardName}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"1",
						"boards"
					],
					"query": [
						{
							"key": "key",
							"value": "{{myKey}}"
						},
						{
							"key": "token",
							"value": "{{myToken}}"
						},
						{
							"key": "name",
							"value": "{{boardName}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "negative scenario with creating  board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"invalid value for name\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/1/boards/?key={{myKey}}&token={{myToken}}&name=",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"1",
						"boards",
						""
					],
					"query": [
						{
							"key": "key",
							"value": "{{myKey}}"
						},
						{
							"key": "token",
							"value": "{{myToken}}"
						},
						{
							"key": "name",
							"value": ""
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get created board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/1/boards/:id?key={{myKey}}&token={{myToken}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"1",
						"boards",
						":id"
					],
					"query": [
						{
							"key": "key",
							"value": "{{myKey}}"
						},
						{
							"key": "token",
							"value": "{{myToken}}"
						}
					],
					"variable": [
						{
							"key": "id",
							"value": "{{board_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "update board name",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(pm.environment.get(\"newBoardName\"));\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/1/boards/:id?key={{myKey}}&token={{myToken}}&name={{newBoardName}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"1",
						"boards",
						":id"
					],
					"query": [
						{
							"key": "key",
							"value": "{{myKey}}"
						},
						{
							"key": "token",
							"value": "{{myToken}}"
						},
						{
							"key": "name",
							"value": "{{newBoardName}}"
						}
					],
					"variable": [
						{
							"key": "id",
							"value": "{{board_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "create a new list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"list_id\", pm.response.json().id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/1/lists?key={{myKey}}&token={{myToken}}&name={{listName}}&idBoard={{board_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"1",
						"lists"
					],
					"query": [
						{
							"key": "key",
							"value": "{{myKey}}"
						},
						{
							"key": "token",
							"value": "{{myToken}}"
						},
						{
							"key": "name",
							"value": "{{listName}}"
						},
						{
							"key": "idBoard",
							"value": "{{board_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get created list",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/1/lists/:id?key={{myKey}}&token={{myToken}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"1",
						"lists",
						":id"
					],
					"query": [
						{
							"key": "key",
							"value": "{{myKey}}"
						},
						{
							"key": "token",
							"value": "{{myToken}}"
						}
					],
					"variable": [
						{
							"key": "id",
							"value": "{{list_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "update list name",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(pm.environment.get(\"newListName\"));\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/1/lists/:id?key={{myKey}}&token={{myToken}}&name={{newListName}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"1",
						"lists",
						":id"
					],
					"query": [
						{
							"key": "key",
							"value": "{{myKey}}"
						},
						{
							"key": "token",
							"value": "{{myToken}}"
						},
						{
							"key": "name",
							"value": "{{newListName}}"
						}
					],
					"variable": [
						{
							"key": "id",
							"value": "{{list_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "create card in list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"card_id\", pm.response.json().id);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/1/cards?key={{myKey}}&token={{myToken}}&idList={{list_id}}&name={{cardName}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"1",
						"cards"
					],
					"query": [
						{
							"key": "key",
							"value": "{{myKey}}"
						},
						{
							"key": "token",
							"value": "{{myToken}}"
						},
						{
							"key": "idList",
							"value": "{{list_id}}"
						},
						{
							"key": "name",
							"value": "{{cardName}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get created card",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/1/cards/:id?key={{myKey}}&token={{myToken}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"1",
						"cards",
						":id"
					],
					"query": [
						{
							"key": "key",
							"value": "{{myKey}}"
						},
						{
							"key": "token",
							"value": "{{myToken}}"
						}
					],
					"variable": [
						{
							"key": "id",
							"value": "{{card_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "update card name",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(pm.environment.get(\"newCardName\"));\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/1/cards/:id?key={{myKey}}&token={{myToken}}&name={{newCardName}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"1",
						"cards",
						":id"
					],
					"query": [
						{
							"key": "key",
							"value": "{{myKey}}"
						},
						{
							"key": "token",
							"value": "{{myToken}}"
						},
						{
							"key": "name",
							"value": "{{newCardName}}"
						}
					],
					"variable": [
						{
							"key": "id",
							"value": "{{card_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "delete a card",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.unset(\"card_id\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/1/cards/:id?key={{myKey}}&token={{myToken}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"1",
						"cards",
						":id"
					],
					"query": [
						{
							"key": "key",
							"value": "{{myKey}}"
						},
						{
							"key": "token",
							"value": "{{myToken}}"
						}
					],
					"variable": [
						{
							"key": "id",
							"value": "{{card_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "delete a board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.unset(\"board_id\");\r",
							"pm.environment.unset(\"list_id\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/1/boards/:id?key={{myKey}}&token={{myToken}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"1",
						"boards",
						":id"
					],
					"query": [
						{
							"key": "key",
							"value": "{{myKey}}"
						},
						{
							"key": "token",
							"value": "{{myToken}}"
						}
					],
					"variable": [
						{
							"key": "id",
							"value": "{{board_id}}"
						}
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://api.trello.com"
		}
	]
}